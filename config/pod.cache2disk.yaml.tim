apiVersion: v1
kind: Pod
metadata:
  name: "{{pod_name}}"
  labels:
    sdbuild: "{{build_id_with_prefix}}"
    app: screwdriver-vm
    tier: builds
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - screwdriver-vm
  restartPolicy: Never
  containers:
  - name: vm-launcher
    image: {{base_image}}
    imagePullPolicy: Always
    lifecycle:
      preStop:
        exec:
          command: ["/bin/sh","-c","sleep 30"]
    securityContext:
      privileged: true
    resources:
      limits:
        cpu: "{{cpu}}"
        memory: {{memory}}Mi
    command: ["/sd/hyper-runner.sh"]
    args: [
         "--cpu", "{{cpu}}",
         "--memory", "{{memory}}",
         "--container", "{{container}}",
         "--api_uri", "{{api_uri}}",
         "--store_uri", "{{store_uri}}",
         "--ui_uri", "{{ui_uri}}",
         "--build_id", "{{build_id}}",
         "--job_id", "{{job_id}}",
         "--event_id","{{event_id}}",
         "--pipeline_id", "{{pipeline_id}}",
         "--id_with_prefix", "{{build_id_with_prefix}}",
         "--build_token", "{{token}}",
         "--build_timeout", "{{build_timeout}}",
         "--launcher_version", "{{launcher_version}}",
         "--cache_strategy", "{{cache_strategy}}",
         "--cache_path", "{{cache_path}}",
         "--cache_compress", "{{cache_compress}}",
         "--cache_md5check", "{{cache_md5check}}",
         "--cache_max_size_mb", "{{cache_max_size_mb}}",
         "--cache_max_go_threads", "{{cache_max_go_threads}}"
          ]
    env:
    - name: SD_PUSHGATEWAY_URL
      value: "{{pushgateway_url}}"
    - name: NODE_ID
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    volumeMounts:
    - mountPath: /var/run
      name: hyper-socket
    - mountPath: /var/sd-workspaces
      name: sd-workspaces
    - mountPath: /opt/sd
      name: sdlauncher
    - mountPath: /opt/sd/cache/pipeline
      name: sd-pipeline-cache
      readOnly: {{volumeReadOnly}}
    - mountPath: /opt/sd/cache/job
      name: sd-job-cache
      readOnly: {{volumeReadOnly}}
    - mountPath: /opt/sd/cache/event
      name: sd-event-cache
  initContainers:
  - name: launcher
    image: {{launcher_image}}
    command: ['/bin/sh', '-c', 'chmod -R 777 /opt/sdcachepipeline && chmod -R 777 /opt/sdcachejob && chmod -R 777 /opt/sdcacheevent && if ! [ -f /opt/launcher/launch ]; then TEMP_DIR=`mktemp -d -p /opt/launcher` && cp -a /opt/sd/* $TEMP_DIR && mkdir -p $TEMP_DIR/hab && cp -a /hab/* $TEMP_DIR/hab && mv $TEMP_DIR/* /opt/launcher && rm -rf $TEMP_DIR || true; else ls /opt/launcher; fi;']
    volumeMounts:
    - mountPath: /opt/launcher
      name: sdlauncher
    - mountPath: /opt/sdcachepipeline
      name: sd-pipeline-cache
    - mountPath: /opt/sdcachejob
      name: sd-job-cache
    - mountPath: /opt/sdcacheevent
      name: sd-event-cache
  volumes:
    - name: hyper-socket
      hostPath:
        path: /var/run
    - name: sd-workspaces
      hostPath:
        path: /opt/screwdriver
    - name: sdlauncher
      type: DirectoryOrCreate
      hostPath:
        path: /opt/screwdriver/sdlauncher/{{launcher_version}}
    - name: sd-pipeline-cache
      type: DirectoryOrCreate
      hostPath:
        path: {{cache_path}}/pipelines/{{pipeline_id}}
    - name: sd-job-cache
      type: DirectoryOrCreate
      hostPath:
        path: {{cache_path}}/jobs/{{pipeline_id}}/{{job_id}}
    - name: sd-event-cache
      type: DirectoryOrCreate
      hostPath:
        path: {{cache_path}}/events/{{pipeline_id}}/{{event_id}}
